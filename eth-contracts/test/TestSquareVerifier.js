// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const Verifier = artifacts.require("Verifier");
const assert = require("chai").assert;

const proof = require("../../zokrates/code/square/proof.json");

// Test verification with correct proof
// - use the contents from proof.json generated from zokrates steps

// Test verification with incorrect proof
contract("TestSquareVerifier", async accounts => {

  describe("Test verification", function() {

    beforeEach(async () => {
      this.contract = await Verifier.new({from: accounts[0]});
    });

    it("verifyTx", async () => {
      const success = await this.contract.verifyTx.call(
        proof.proof.a,
        proof.proof.b,
        proof.proof.c,
        proof.inputs,
        {from: accounts[0]}
      );

      assert.equal(true, success);
    });
  });
});
